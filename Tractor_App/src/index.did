service: () -> {
    addFarmer: (record {farmernatId:nat64; farmer_Fname:text; farmer_Lname:text; phoneNumber:nat64; location:text}) -> (variant {Ok:record {farmernatId:nat64; farmer_Fname:text; farmerId:text; createdAt:nat64; updatedAt:opt nat64; farmer_Lname:text; phoneNumber:nat64; location:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    addTractor: (record {tractorBrand:text; tractorModel:text}) -> (variant {Ok:record {status:bool; createdAt:nat64; tractorBrand:text; tractorId:nat64; updatedAt:opt nat64; tractorModel:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    bookTractor: (record {farmerId:text; tractorId:nat64}) -> (variant {Ok:record {bookingId:nat64; returnTractor:bool; farmerId:text; createdAt:nat64; tractorId:nat64; updatedAt:opt nat64}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    deleteFarmer: (text) -> (variant {Ok:record {farmernatId:nat64; farmer_Fname:text; farmerId:text; createdAt:nat64; updatedAt:opt nat64; farmer_Lname:text; phoneNumber:nat64; location:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    deleteTractor: (nat64) -> (variant {Ok:record {status:bool; createdAt:nat64; tractorBrand:text; tractorId:nat64; updatedAt:opt nat64; tractorModel:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    getBooking: () -> (variant {Ok:vec record {bookingId:nat64; returnTractor:bool; farmerId:text; createdAt:nat64; tractorId:nat64; updatedAt:opt nat64}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}}) query;
    getFarmer: () -> (variant {Ok:vec record {farmernatId:nat64; farmer_Fname:text; farmerId:text; createdAt:nat64; updatedAt:opt nat64; farmer_Lname:text; phoneNumber:nat64; location:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}}) query;
    getTractor: () -> (variant {Ok:vec record {status:bool; createdAt:nat64; tractorBrand:text; tractorId:nat64; updatedAt:opt nat64; tractorModel:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}}) query;
    getspecificFarmer: (text) -> (variant {Ok:record {farmernatId:nat64; farmer_Fname:text; farmerId:text; createdAt:nat64; updatedAt:opt nat64; farmer_Lname:text; phoneNumber:nat64; location:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}}) query;
    getspecificTractor: (nat64) -> (variant {Ok:record {status:bool; createdAt:nat64; tractorBrand:text; tractorId:nat64; updatedAt:opt nat64; tractorModel:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}}) query;
    returnTractorBooked: (nat64) -> (variant {Ok:record {bookingId:nat64; returnTractor:bool; farmerId:text; createdAt:nat64; tractorId:nat64; updatedAt:opt nat64}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    updateFarmer: (text, record {farmernatId:nat64; farmer_Fname:text; farmer_Lname:text; phoneNumber:nat64; location:text}) -> (variant {Ok:record {farmernatId:nat64; farmer_Fname:text; farmerId:text; createdAt:nat64; updatedAt:opt nat64; farmer_Lname:text; phoneNumber:nat64; location:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
    updateTractor: (nat64, record {tractorBrand:text; tractorModel:text}) -> (variant {Ok:record {status:bool; createdAt:nat64; tractorBrand:text; tractorId:nat64; updatedAt:opt nat64; tractorModel:text}; Err:variant {NoRecordtoKeyIn:text; InvalidPayload:text; TractorBookingNotFound:text; NotFound:text; TractorNotFound:text; TractorNotAvailable:text; TractorReturned:text}});
}
